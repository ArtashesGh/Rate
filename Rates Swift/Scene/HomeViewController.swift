//
//  HomeViewController.swift
//  Rates Swift
//
//  Created by Artashes Noknok on 7/16/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeDisplayLogic: AnyObject
{
    func displayValue(viewModel: Home.RatesModel.ViewModel)
    func displayError(errorMesage:String)
    func showLoader()
    func hideLoader()
}

class HomeViewController: UIViewController, HomeDisplayLogic
{
    @IBOutlet weak var tableView: UITableView!
    var interactor: HomeBusinessLogic?
    var router: (NSObjectProtocol & HomeRoutingLogic & HomeDataPassing)?
    var dipleyedList:[Rate] = []
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = HomeInteractor()
        let presenter = HomePresenter()
        let router = HomeRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        doGetValue()
    }
    
    // MARK: Do GetValue
    
    
    func doGetValue()
    {
        let request = Home.RatesModel.Request()
        interactor?.doGetValue(request: request)
    }
    
    func displayValue(viewModel: Home.RatesModel.ViewModel)
    {
        dipleyedList = viewModel.ratesList.ratesList
        tableView.reloadData()
    }
    
    func displayError(errorMesage:String) {
        showAlert(title: "Error", msg: errorMesage)
    }
    
    //MARK: - Hide & Show Loader
    
    func showLoader() {
        view.showLoader()
    }
    
    func hideLoader() {
        DispatchQueue.main.async {
            self.view.removeLoader()
        }
    }
}
extension HomeViewController : UITableViewDelegate, UITableViewDataSource {
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return self.dipleyedList.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        let cell = tableView.dequeueReusableCell(withIdentifier: "RateInfoTableViewCell") as! RateInfoTableViewCell
        cell.nameLabel.text = dipleyedList[indexPath.row].name
        cell.basicLabel.text = dipleyedList[indexPath.row].basic
        cell.fromValueLabel.text = "\(String(describing: dipleyedList[indexPath.row].from))"
        cell.toValueLabel.text = "\(String(describing: dipleyedList[indexPath.row].to))"
        cell.currMnemFromLabel.text = dipleyedList[indexPath.row].currMnemFrom
        cell.currMnemToLabel.text = dipleyedList[indexPath.row].currMnemTo
        cell.saleValueLabel.text = dipleyedList[indexPath.row].sale
        cell.deltaSaleLabel.text = dipleyedList[indexPath.row].deltaSale
        cell.buyValeuLabel.text = dipleyedList[indexPath.row].buy
        cell.deltaBuyLabel.text = dipleyedList[indexPath.row].deltaBuy
        return cell
    }
}
