//
//  HomeInteractor.swift
//  Rates Swift
//
//  Created by Artashes Noknok on 7/16/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import RxSwift

protocol HomeBusinessLogic
{
    func doGetValue(request: Home.RatesModel.Request)
}

protocol HomeDataStore
{
    
}

class HomeInteractor: HomeBusinessLogic, HomeDataStore
{
    var presenter: HomePresentationLogic?
    var worker: HomeWorker?
    let bag = DisposeBag()
    let dispossible = CompositeDisposable()
    
    // MARK: Do GetValue
    
    func doGetValue(request: Home.RatesModel.Request)
    {
        worker = HomeWorker()
        
        
        presenter?.showLoader()
        _ = worker?.getRates()
            .observe(on: MainScheduler.instance)
            .subscribe(onNext: { [weak self] (rates) in
                guard let strongSelf = self else { return }
                let response = Home.RatesModel.Response(rates: rates)
                strongSelf.presenter?.hideLoader()
                strongSelf.presenter?.presentGetedValue(response: response)
            }, onError: { [weak self] (error) in
                guard let strongSelf = self else { return }
                strongSelf.presenter?.hideLoader()
                strongSelf.presenter?.presentError(error: "\(error.localizedDescription)")
                
            })
        dispossible.disposed(by:bag)
    }
}
